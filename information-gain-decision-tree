import numpy as np
def calc_entropy(col):
    counts = np.bincount(col)
    probabilities = counts/len(col)
    entropy = 0
    for prob in probabilities:
        if prob > 0:
            entropy += prob*math.log(prob,2)
    return -entropy

age_meadian =        income["age"].median()
left_split  = income[income["age"] <= age_meadian]
right_split = income[income["age"] >  age_meadian]

age_information_gain = calc_entropy(income["high_income"]) - (left_split.shape[0]/income.shape[0]*calc_entropy(left_split["high_income"]) + right_split.shape[0]/income.shape[0]*calc_entropy(right_split["high_income"]))
